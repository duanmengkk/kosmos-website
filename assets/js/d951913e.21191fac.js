"use strict";(self.webpackChunkzfile_docs=self.webpackChunkzfile_docs||[]).push([[362],{6328:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var r=s(4848),t=s(8453);const l={id:"mc-scheduler",title:"Multi-cluster Scheduler"},o="Multi-cluster Scheduler",i={id:"v0.2.0/tutorials/mc-scheduler",title:"Multi-cluster Scheduler",description:"After Kosmos join a member cluster, it will map a virtual node with the kosmos.io/node=true:Noschedule taint, so the Kubernetes default scheduler cannot schedule Pods to the virtual node (i.e, the member cluster).",source:"@site/docs/v0.2.0/tutorials/multi-cluster-scheduler.md",sourceDirName:"v0.2.0/tutorials",slug:"/v0.2.0/tutorials/mc-scheduler",permalink:"/website/v0.2.0/tutorials/mc-scheduler",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/v0.2.0/tutorials/multi-cluster-scheduler.md",tags:[],version:"current",frontMatter:{id:"mc-scheduler",title:"Multi-cluster Scheduler"},sidebar:"tutorialSidebar",previous:{title:"Multi-cluster Service Discovery",permalink:"/website/v0.2.0/tutorials/mcs-discovery"},next:{title:"Multi-cluster Network Connectivity",permalink:"/website/v0.2.0/tutorials/mcn-connectivity"}},c={},d=[{value:"Multi-cluster Scheduler Solution",id:"multi-cluster-scheduler-solution",level:2},{value:"Introduction",id:"introduction",level:3},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Install Kosmos",id:"install-kosmos",level:4},{value:"Join the Leaf Cluster",id:"join-the-leaf-cluster",level:4},{value:"Deploy Kosmos-scheduler",id:"deploy-kosmos-scheduler",level:3},{value:"Try a Sample",id:"try-a-sample",level:4},{value:"Conclusion",id:"conclusion",level:3}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"multi-cluster-scheduler",children:"Multi-cluster Scheduler"})}),"\n",(0,r.jsxs)(n.p,{children:["After Kosmos join a member cluster, it will map a virtual node with the ",(0,r.jsx)(n.code,{children:"kosmos.io/node=true:Noschedule"})," taint, so the Kubernetes default scheduler cannot schedule Pods to the virtual node (i.e, the member cluster).\r\nAfter deploying the kosmos-scheduler, users can tolerate the ",(0,r.jsx)(n.code,{children:"kosmos.io/node=true:Noschedule"})," taint through the ",(0,r.jsx)(n.code,{children:"LeafNodeTaintToleration"})," scheduling plugin in kosmos-scheduler to achieve an indiscriminate mixed scheduling effect between member cluster and host cluster nodes."]}),"\n",(0,r.jsxs)(n.p,{children:["For Pods with PV/PVC, you also need to configure the ",(0,r.jsx)(n.code,{children:"LeafNodeVolumeBinding"})," scheduling plugin in kosmos-scheduler to directly use the virtual node with the ",(0,r.jsx)(n.code,{children:"kosmos.io/node=true:Noschedule"})," taint during the storage volume binding process."]}),"\n",(0,r.jsxs)(n.p,{children:["It should be noted that for different versions of Kubernetes, the scheduling module (Scheduler Framework) on which the published default scheduler depends will also change with the version. Currently, Kosmos has also adapted to the two versions (",(0,r.jsx)(n.code,{children:"release-1.21.5"})," and ",(0,r.jsx)(n.code,{children:"release-1.26.3"}),").\r\nThe following verification part will be deployed and tested with release-1.21.5."]}),"\n",(0,r.jsx)(n.h2,{id:"multi-cluster-scheduler-solution",children:"Multi-cluster Scheduler Solution"}),"\n",(0,r.jsx)(n.h3,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsxs)(n.p,{children:["The Scheduler framework was first introduced through the ",(0,r.jsx)(n.a,{href:"https://link.zhihu.com/?target=https%3A//github.com/kubernetes/enhancements/tree/master/keps/sig-scheduling/624-scheduling-framework",children:"624-scheduling-framework"})," proposal of kubernetes enhancements, mainly to achieve the following goals:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Make scheduler more extendable."}),"\n",(0,r.jsx)(n.li,{children:"Make scheduler core simpler by moving some of its features to plugins."}),"\n",(0,r.jsx)(n.li,{children:"Propose extension points in the framework."}),"\n",(0,r.jsx)(n.li,{children:"Propose a mechanism to receive plugin results and continue or abort based on the received results."}),"\n",(0,r.jsx)(n.li,{children:"Propose a mechanism to handle errors and communicate them with plugins."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["For this purpose, the scheduler framework defines multiple extension points as follows:\r\n",(0,r.jsx)(n.img,{alt:"MC_Scheduler.png",src:s(7727).A+"",width:"1366",height:"613"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"LeafNodeTaintToleration"})," and ",(0,r.jsx)(n.code,{children:"LeafNodeVolumeBinding"})," scheduling plugins in kosmos-scheduler are mainly optimized based on the ",(0,r.jsx)(n.code,{children:"NodeTaintToleration"})," and ",(0,r.jsx)(n.code,{children:"NodeVolumeBinding"})," scheduling plugins of the Kubernetes default scheduler.\r\n",(0,r.jsx)(n.code,{children:"LeafNodeTaintToleration"})," plugin mainly adds tolerance to the ",(0,r.jsx)(n.code,{children:"kosmos.io/node=true:Noschedule"})," taint in the virtual node in the ",(0,r.jsx)(n.code,{children:"Filter extension point"}),".\r\n",(0,r.jsx)(n.code,{children:"LeafNodeVolumeBinding"})," plugin mainly acts on the Filter, Reserve, Unreserved, and PreBind extension points, and directly passes the virtual node with the ",(0,r.jsx)(n.code,{children:"kosmos.io/node=true:Noschedule"})," taint."]}),"\n",(0,r.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsx)(n.h4,{id:"install-kosmos",children:"Install Kosmos"}),"\n",(0,r.jsxs)(n.p,{children:["Refer to the Kosmos Quick Start documentation ",(0,r.jsx)(n.a,{href:"https://github.com/kosmos-io/kosmos",children:"https://github.com/kosmos-io/kosmos"})," and enable the ClusterLink module for multi-cluster networking. Using the kosmosctl tool:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"kosmosctl install --cni calico --default-nic eth0 (We build a network tunnel based on the network interface value passed by the arg default-nic)\n"})}),"\n",(0,r.jsx)(n.admonition,{title:"NOTE",type:"info",children:(0,r.jsx)(n.p,{children:"At least the clustertree module is deployed and join the leaf cluster correctly."})}),"\n",(0,r.jsx)(n.h4,{id:"join-the-leaf-cluster",children:"Join the Leaf Cluster"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"kosmosctl join cluster --name cluster1 --kubeconfig ~/kubeconfig/cluster1-kubeconfig --cni calico --default-nic eth0 --enable-link\n"})}),"\n",(0,r.jsx)(n.h3,{id:"deploy-kosmos-scheduler",children:"Deploy Kosmos-scheduler"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Configure scheduler and scheduling policy:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:'---\r\n# kosmos-scheduler scheduling policy\r\napiVersion: v1\r\nkind: ConfigMap\r\nmetadata:\r\n  name: scheduler-config\r\n  namespace: kosmos-system\r\ndata:\r\n  scheduler-config.yaml: |\r\n    apiVersion: kubescheduler.config.k8s.io/v1beta1\r\n    kind: KubeSchedulerConfiguration\r\n    leaderElection:\r\n      leaderElect: true\r\n      resourceName: kosmos-scheduler\r\n      resourceNamespace: kosmos-system\r\n    profiles:\r\n      - schedulerName: kosmos-scheduler\r\n        plugins:\r\n          preFilter:\r\n            disabled:\r\n              - name: "VolumeBinding"\r\n            enabled:\r\n              - name: "LeafNodeVolumeBinding"\r\n          filter:\r\n            disabled:\r\n              - name: "VolumeBinding"\r\n              - name: "TaintToleration"\r\n            enabled:\r\n              - name: "LeafNodeTaintToleration"\r\n              - name: "LeafNodeVolumeBinding"\r\n          score:\r\n            disabled:\r\n              - name: "VolumeBinding"\r\n          reserve:\r\n            disabled:\r\n              - name: "VolumeBinding"\r\n            enabled:\r\n              - name: "LeafNodeVolumeBinding"\r\n          preBind:\r\n            disabled:\r\n              - name: "VolumeBinding"\r\n            enabled:\r\n              - name: "LeafNodeVolumeBinding"\r\n        pluginConfig:\r\n          - name: LeafNodeVolumeBinding\r\n            args:\r\n              bindTimeoutSeconds: 5\r\n---\r\n# scheduler config\r\napiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  name: kosmos-scheduler\r\n  namespace: kosmos-system\r\n  labels:\r\n    component: scheduler\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    matchLabels:\r\n      component: scheduler\r\n  template:\r\n    metadata:\r\n      labels:\r\n        component: scheduler\r\n    spec:\r\n      volumes:\r\n        - name: scheduler-config\r\n          configMap:\r\n            name: scheduler-config\r\n            defaultMode: 420\r\n      containers:\r\n        - name: kosmos-scheduler\r\n          image: ghcr.io/kosmos-io/scheduler:0.0.2\r\n          command:\r\n            - scheduler\r\n            - --config=/etc/kubernetes/kube-scheduler/scheduler-config.yaml\r\n          resources:\r\n            requests:\r\n              cpu: 200m\r\n          volumeMounts:\r\n            - name: scheduler-config\r\n              readOnly: true\r\n              mountPath: /etc/kubernetes/kube-scheduler\r\n          livenessProbe:\r\n            httpGet:\r\n              path: /healthz\r\n              port: 10259\r\n              scheme: HTTPS\r\n            initialDelaySeconds: 15\r\n            periodSeconds: 10\r\n            failureThreshold: 3\r\n          readinessProbe:\r\n            httpGet:\r\n              path: /healthz\r\n              port: 10259\r\n              scheme: HTTPS\r\n      restartPolicy: Always\r\n      dnsPolicy: ClusterFirst\r\n      serviceAccountName: kosmos-scheduler\r\n      serviceAccount: kosmos-scheduler\n'})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Verify the kosmos-scheduler service:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"# kosmos-scheduler is created.\r\nkubectl -n kosmos-system get pod\r\nNAME                                         READY   STATUS    RESTARTS   AGE\r\nkosmos-scheduler-8f96d87d7-ssxrx             1/1     Running   0          24s\n"})}),"\n",(0,r.jsx)(n.h4,{id:"try-a-sample",children:"Try a Sample"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Deploy openebs on the test cluster"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Use case yaml\uff08mysql-cluster.yaml\uff09"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:'apiVersion: v1\r\nkind: Secret\r\nmetadata:\r\n  namespace: test-mysql\r\n  name: my-secret\r\ntype: Opaque\r\ndata:\r\n  # root password is required to be specified\r\n  ROOT_PASSWORD: ${your_password}\r\n  ## application credentials that will be created at cluster bootstrap\r\n  # DATABASE:\r\n  # USER:\r\n  # PASSWORD:\r\n---\r\nkind: MysqlCluster\r\nmetadata:\r\n  name: test-mysql-cluster\r\n  namespace: test-mysql\r\nspec:\r\n  replicas: 2\r\n  secretName: my-secret\r\n  image: docker.io/percona:5.7\r\n  mysqlVersion: "5.7"\r\n  podSpec:\r\n    affinity:         \r\n      podAntiAffinity:\r\n        requiredDuringSchedulingIgnoredDuringExecution:\r\n        - labelSelector:\r\n            matchLabels:\r\n              mysql.presslabs.org/cluster: test-mysql-cluster\r\n          topologyKey: kubernetes.io/hostname\r\n  volumeSpec:\r\n    persistentVolumeClaim:\r\n      storageClassName: openebs-hostpath\r\n      accessModes:\r\n        - ReadWriteOnce\r\n      resources:\r\n        requests:\r\n          storage: 1Gi\n'})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"Operation instructions"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"# List all nodes in the host cluster\r\nkubectl get node\r\nNAME                       STATUS     ROLES                       AGE   VERSION\r\nkosmoscluster1-1           Ready      control-plane,master,node   21d   v1.21.5-eki.0\r\nkosmoscluster1-2           Ready      node                        21d   v1.21.5-eki.0\r\nkosmos-member2-cluster-1   Ready      agent                       24m   v1.21.5-eki.0\r\nkosmos-member2-cluster-2   Ready      agent                       24m   v1.21.5-eki.0\r\n \r\n# Show the taint information on the virtual node\r\nkubectl describe node kosmos-member2-cluster-1  |grep Tai\r\nTaints:             node.kubernetes.io/unreachable:NoExecute\r\n \r\nkubectl describe node kosmos-member2-cluster-2  |grep Tai\r\nTaints:             node.kubernetes.io/unreachable:NoExecute\r\n \r\n# Scheduling by the kosmos-scheduler (hybrid scheduling)\r\nkubectl apply -f  mysql-cluster.yaml\r\n    \r\n# Show instances (hybrid) scheduling result in host cluster\r\nkubectl get pod -owide -n test-mysql\r\nNAME                            READY   STATUS    RESTARTS   AGE   IP               NODE                       NOMINATED NODE   READINESS GATES\r\ntest-mysql-cluster-mysql-0      4/4     Running   0          3m    2409:xxxxx:8ac   kosmoscluster1-2           <none>           <none>\r\ntest-mysql-cluster-mysql-1      4/4     Running   0          2m    2409:xxxxx:8ae   kosmos-member2-cluster-1   <none>           <none>\r\n\r\n# Show instances (hybrid) scheduling result in member cluster\r\nkubectl get pod -owide -n test-mysql\r\nNAME                            READY   STATUS    RESTARTS   AGE   IP               NODE                       NOMINATED NODE   READINESS GATES\r\ntest-mysql-cluster-mysql-1      4/4     Running   0          2m    2409:xxxxx:8ae   kosmos-member2-cluster-1   <none>           <none>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"conclusion",children:"Conclusion"}),"\n",(0,r.jsx)(n.p,{children:"You can see that kosmos-scheduler successfully schedules the Pods of the user instances to the host cluster and member clusters."})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},7727:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/MC_Scheduler-4e0d264782f68e38b5d41dc36731c7fe.png"},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>i});var r=s(6540);const t={},l=r.createContext(t);function o(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);