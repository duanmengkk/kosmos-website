"use strict";(self.webpackChunkzfile_docs=self.webpackChunkzfile_docs||[]).push([[923],{1973:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var i=t(4848),r=t(8453);const s={id:"application-migration",title:"Application Migration"},a="Application Migration",o={id:"v0.2.0/tutorials/application-migration",title:"Application Migration",description:"Kosmos provides application migration functionality to help users migrate existing applications from subclusters to the Kosmos control plane cluster.",source:"@site/docs/v0.2.0/tutorials/application-migration.md",sourceDirName:"v0.2.0/tutorials",slug:"/v0.2.0/tutorials/application-migration",permalink:"/website/v0.2.0/tutorials/application-migration",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/v0.2.0/tutorials/application-migration.md",tags:[],version:"current",frontMatter:{id:"application-migration",title:"Application Migration"},sidebar:"tutorialSidebar",previous:{title:"IPsec Cross-cluster Network",permalink:"/website/v0.2.0/tutorials/ipsec-network"},next:{title:"Kubenest",permalink:"/website/v0.2.0/tutorials/kubenest"}},l={},c=[{value:"Application Migration Solution",id:"application-migration-solution",level:2},{value:"Introduction",id:"introduction",level:3},{value:"Design Details",id:"design-details",level:3},{value:"Application Backup",id:"application-backup",level:4},{value:"Deletion of Owner Objects",id:"deletion-of-owner-objects",level:4},{value:"Rebuilding Applications in the Control Plane",id:"rebuilding-applications-in-the-control-plane",level:4},{value:"CRD API",id:"crd-api",level:4},{value:"Rollback",id:"rollback",level:4},{value:"Test Plans",id:"test-plans",level:3},{value:"Preparation",id:"preparation",level:4},{value:"Create an Existing Application in the Subcluster",id:"create-an-existing-application-in-the-subcluster",level:4},{value:"Create a Migration Policy",id:"create-a-migration-policy",level:4},{value:"Check the Migration Result",id:"check-the-migration-result",level:4},{value:"Rollback",id:"rollback-1",level:4}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"application-migration",children:"Application Migration"})}),"\n",(0,i.jsx)(n.p,{children:"Kosmos provides application migration functionality to help users migrate existing applications from subclusters to the Kosmos control plane cluster."}),"\n",(0,i.jsx)(n.h2,{id:"application-migration-solution",children:"Application Migration Solution"}),"\n",(0,i.jsx)(n.h3,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(n.p,{children:"In the Kosmos multi-cluster design architecture, users can interact with the kube-apiserver of the control plane cluster using tools such as kubectl and client-go to create deployments or statefulset applications, etc.\r\nThe actual Pod instances are running in the subclusters."}),"\n",(0,i.jsx)(n.p,{children:"However, for existing applications in the subclusters that were not created through the Kosmos control plane, these applications cannot be viewed and managed in the control plane cluster."}),"\n",(0,i.jsx)(n.p,{children:"Kosmos provides application migration functionality to support the migration of applications in a namespace to the control plane cluster.\r\nThe entire process does not require restarting the application Pod instances, ensuring minimal impact on business operations."}),"\n",(0,i.jsx)(n.h3,{id:"design-details",children:"Design Details"}),"\n",(0,i.jsx)(n.p,{children:"Application migration mainly consists of three processes: application backup -> deletion of owner objects -> rebuilding applications in the control plane."}),"\n",(0,i.jsx)(n.h4,{id:"application-backup",children:"Application Backup"}),"\n",(0,i.jsx)(n.p,{children:"Kosmos first backs up all namespaced-level resources in the target namespace, as well as the dependent cluster-level resources, such as cluster roles, cluster role bindings, persistent volumes, etc.\r\nThe backup files are stored in PVCs in Kosmos."}),"\n",(0,i.jsx)(n.h4,{id:"deletion-of-owner-objects",children:"Deletion of Owner Objects"}),"\n",(0,i.jsx)(n.p,{children:"The subclusters in Kosmos only run Pods, and their owner StatefulSets or ReplicaSets need to be deleted and rebuilt in the Kosmos control plane.\r\nSimilarly, the owner Deployment of a ReplicaSet, as well as the owner StatefulSet and Deployment, need to be deleted and rebuilt in the Kosmos control plane."}),"\n",(0,i.jsx)(n.p,{children:"By using a top-down cascading deletion of owner objects (e.g., deleting the Deployment first and then the ReplicaSet), the Pods are not affected and remain in a running state."}),"\n",(0,i.jsx)(n.h4,{id:"rebuilding-applications-in-the-control-plane",children:"Rebuilding Applications in the Control Plane"}),"\n",(0,i.jsx)(n.p,{children:"Based on the backup resources, the control plane cluster creates all the migrated resources, including namespaces, pods, deployments, config maps, service accounts, etc.\r\nIn order to maintain consistency with the subcluster Pods and keep them in a running state, the applications are rebuilt using a bottom-up approach (e.g., creating the Pod first and then the ReplicaSet)."}),"\n",(0,i.jsx)(n.h4,{id:"crd-api",children:"CRD API"}),"\n",(0,i.jsx)(n.p,{children:"The PromotePolicy CRD API is provided for configuring the migration policy.\r\nPromotePolicy is a cluster-wide CRD API. Here is an example of how to use it:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",metastring:"script",children:"apiVersion: kosmos.io/v1alpha1\r\nkind: PromotePolicy\r\nmetadata:\r\n  name: promote-policy-sample\r\nspec:\r\n  includedNamespaces:\r\n    - namespace1\r\n    - namespace2\r\n  excludedNamespaceScopedResources:\r\n    - events\r\n    - events.events.k8s.io\r\n    - endpoints\r\n    - endpointslices.discovery.k8s.io\r\n  clusterName: member-cluster1\n"})}),"\n",(0,i.jsx)(n.p,{children:"where:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"includedNamespaces: The namespaces to be migrated."}),"\n",(0,i.jsx)(n.li,{children:"excludedNamespaceScopedResources: The namespace-level resources that should not be migrated.\r\nIt is recommended to keep the example configuration and add additional configurations as needed based on actual requirements."}),"\n",(0,i.jsx)(n.li,{children:"clusterName: The name of the Kosmos subcluster."}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"rollback",children:"Rollback"}),"\n",(0,i.jsx)(n.p,{children:"Kosmos supports rollback functionality for migrations.\r\nAfter a successful migration, the existing applications in the subcluster can be restored to their initial state.\r\nSimply edit the PromotePolicy YAML file and add the configuration 'rollback'=true."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",metastring:"script",children:'apiVersion: kosmos.io/v1alpha1\r\nkind: PromotePolicy\r\nmetadata:\r\n  name: promote-policy-sample\r\nspec:\r\n  rollback: "true"\r\n  includedNamespaces:\r\n    - namespace1\r\n    - namespace2\r\n  excludedNamespaceScopedResources:\r\n    - events\r\n    - events.events.k8s.io\r\n    - endpoints\r\n    - endpointslices.discovery.k8s.io\r\n  clusterName: member-cluster1\n'})}),"\n",(0,i.jsx)(n.h3,{id:"test-plans",children:"Test Plans"}),"\n",(0,i.jsx)(n.h4,{id:"preparation",children:"Preparation"}),"\n",(0,i.jsxs)(n.p,{children:["First, you need to deploy ",(0,i.jsx)(n.a,{href:"https://github.com/kosmos-io/kosmos",children:"Kosmos"})," (the clustertree module must be installed) and add a subcluster."]}),"\n",(0,i.jsx)(n.h4,{id:"create-an-existing-application-in-the-subcluster",children:"Create an Existing Application in the Subcluster"}),"\n",(0,i.jsx)(n.p,{children:"Deploy an nginx application in the subcluster as an example."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",metastring:"script",children:"apiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  name: nginx\r\n  namespace: nginx-test\r\nspec:\r\n  selector:\r\n    matchLabels:\r\n      app: nginx\r\n  replicas: 1\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app: nginx\r\n      deletionGracePeriodSeconds: 30\r\n    spec:\r\n      containers:\r\n      - name: nginx\r\n        image: nginx:1.14-alpine\r\n        ports:\r\n        - containerPort: 80\r\n\r\n---\r\napiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  name: nginx-service\r\n  namespace: nginx-test\r\nspec:\r\n  selector:\r\n    app: nginx\r\n  ports:\r\n  - protocol: TCP\r\n    port: 80\r\n    targetPort: 80\r\n  type: ClusterIP\n"})}),"\n",(0,i.jsx)(n.h4,{id:"create-a-migration-policy",children:"Create a Migration Policy"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",metastring:"script",children:"# kubectl apply -f promote-nginx.yaml\r\napiVersion: kosmos.io/v1alpha1\r\nkind: PromotePolicy\r\nmetadata:\r\n  name: promote-policy-example\r\nspec:\r\n  includedNamespaces:\r\n    - nginx-test\r\n  excludedNamespaceScopedResources:\r\n    - events\r\n    - events.events.k8s.io\r\n    - endpoints\r\n    - endpointslices.discovery.k8s.io\r\n  clusterName: cluster-36-28\n"})}),"\n",(0,i.jsx)(n.h4,{id:"check-the-migration-result",children:"Check the Migration Result"}),"\n",(0,i.jsx)(n.p,{children:"Check the progress of the migration:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",metastring:"script",children:"# kubectl describe promotepolicy promote-policy-example\r\nName:         promote-policy-example\r\nNamespace:    default\r\nLabels:       <none>\r\nAnnotations:  <none>\r\nAPI Version:  kosmos.io/v1alpha1\r\nKind:         PromotePolicy\r\nMetadata:\r\n  Creation Timestamp:  2024-03-11T10:57:47Z\r\n  Generation:          3\r\n  Resource Version:  405947183\r\n  UID:               0e32dd93-c370-4874-b9a7-37a6894cd373\r\nSpec:\r\n  Cluster Name:  cluster-36-28\r\n  Excluded Namespace Scoped Resources:\r\n    events\r\n    events.events.k8s.io\r\n    endpoints\r\n    endpointslices.discovery.k8s.io\r\n    controllerrevisions.apps\r\n  Included Namespaces:\r\n    nginx-test\r\nStatus:\r\n  Backedup File:  /data/backup/promote-policy-sample20240311-104907\r\n  Phase:          Completed\r\nEvents:           <none>\n"})}),"\n",(0,i.jsx)(n.p,{children:"When Status.Phase is 'Completed', it means the migration is successful. At this point, you can view and manage all applications in the nginx-test namespace in the control plane cluster."}),"\n",(0,i.jsx)(n.h4,{id:"rollback-1",children:"Rollback"}),"\n",(0,i.jsx)(n.p,{children:"Edit the promote-nginx.yml file and add the configuration \u2018rollback\u2019=true:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",metastring:"script",children:'# kubectl apply -f promote-nginx.yaml\r\napiVersion: kosmos.io/v1alpha1\r\nkind: PromotePolicy\r\nmetadata:\r\n  name: promote-policy-example\r\nspec:\r\n  rollback: "true"\r\n  includedNamespaces:\r\n    - nginx-test\r\n  excludedNamespaceScopedResources:\r\n    - events\r\n    - events.events.k8s.io\r\n    - endpoints\r\n    - endpointslices.discovery.k8s.io\r\n  clusterName: cluster-36-28\n'})}),"\n",(0,i.jsx)(n.p,{children:"Check the rollback result:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",metastring:"script",children:"# kubectl describe promotepolicy promote-policy-example\r\nName:         promote-policy-example\r\nNamespace:    default\r\nLabels:       <none>\r\nAnnotations:  <none>\r\nAPI Version:  kosmos.io/v1alpha1\r\nKind:         PromotePolicy\r\nMetadata:\r\n  Creation Timestamp:  2024-03-11T10:57:47Z\r\n  Generation:          5\r\n  Resource Version:  405953692\r\n  UID:               0e32dd93-c370-4874-b9a7-37a6894cd373\r\nSpec:\r\n  Cluster Name:  cluster-36-28\r\n  Excluded Namespace Scoped Resources:\r\n    events\r\n    events.events.k8s.io\r\n    endpoints\r\n    endpointslices.discovery.k8s.io\r\n    controllerrevisions.apps\r\n  Included Namespaces:\r\n    nginx-test\r\nStatus:\r\n  Backedup File:  /data/backup/promote-policy-sample20240311-104907\r\n  Phase:          RolledBack\r\nEvents:           <none>\n"})}),"\n",(0,i.jsx)(n.p,{children:"When Status.Phase is 'RolledBack', it means the rollback is successful.\r\nAt this point, the applications in the nginx-test namespace cannot be queried in the control plane cluster."})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(6540);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);