"use strict";(self.webpackChunkzfile_docs=self.webpackChunkzfile_docs||[]).push([[606],{85:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>u,frontMatter:()=>t,metadata:()=>c,toc:()=>a});var l=s(4848),o=s(8453);const t={id:"quick-start",title:"Quick Start"},i="Quick Start",c={id:"v0.2.0/quick-start",title:"Quick Start",description:"This guide will cover:",source:"@site/docs/v0.2.0/quickstart.md",sourceDirName:"v0.2.0",slug:"/v0.2.0/quick-start",permalink:"/website/v0.2.0/quick-start",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/v0.2.0/quickstart.md",tags:[],version:"current",frontMatter:{id:"quick-start",title:"Quick Start"},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/website/v0.2.0/getting-started/introduction"},next:{title:"Multi-cluster Service Discovery",permalink:"/website/v0.2.0/tutorials/mcs-discovery"}},r={},a=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Deploy and run Kosmos control plane use script",id:"deploy-and-run-kosmos-control-plane-use-script",level:2},{value:"Deploy and run Kosmos step by step",id:"deploy-and-run-kosmos-step-by-step",level:2},{value:"1. Use Kind create cluster",id:"1-use-kind-create-cluster",level:3},{value:"2. Install <code>kosmosctl</code>",id:"2-install-kosmosctl",level:3},{value:"2.1 Use prebuild Binary executable file",id:"21-use-prebuild-binary-executable-file",level:4},{value:"2.2 Build from source",id:"22-build-from-source",level:4},{value:"3. Install <code>kosmos</code> control plane components",id:"3-install-kosmos-control-plane-components",level:3},{value:"4. Join to <code>kosmos</code> control plane",id:"4-join-to-kosmos-control-plane",level:3},{value:"5. Use the Kosmos clusters like single cluster on the control plane.",id:"5-use-the-kosmos-clusters-like-single-cluster-on-the-control-plane",level:3},{value:"Deploy nginx use kosmos",id:"deploy-nginx-use-kosmos",level:2},{value:"create nginx deployment yaml",id:"create-nginx-deployment-yaml",level:3},{value:"apply the yaml",id:"apply-the-yaml",level:3},{value:"check nginx pod status",id:"check-nginx-pod-status",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"quick-start",children:"Quick Start"})}),"\n",(0,l.jsx)(n.p,{children:"This guide will cover:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Use Kind create three kubernetes cluster"}),"\n",(0,l.jsxs)(n.li,{children:["Install ",(0,l.jsx)(n.code,{children:"kosmosctl"}),", you can download from the ",(0,l.jsx)("a",{href:"https://github.com/kosmos-io/kosmos/releases",children:"releases page"})," or build from source"]}),"\n",(0,l.jsxs)(n.li,{children:["Install ",(0,l.jsx)(n.code,{children:"kosmos"})," control plane components in a Kubernetes cluster which is known as ",(0,l.jsx)(n.code,{children:"host cluster"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["Join a member cluster to ",(0,l.jsx)(n.code,{children:"kosmos"})," control plane on the ",(0,l.jsx)(n.code,{children:"host cluster"}),"."]}),"\n",(0,l.jsx)(n.li,{children:"Use the Kosmos clusters."}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"https://golang.org/",children:"Go"})," version v1.20+"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/tools/install-kubectl/",children:"kubectl"})," version v1.19+"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"https://kind.sigs.k8s.io/",children:"kind"})," version v0.14.0+"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"deploy-and-run-kosmos-control-plane-use-script",children:"Deploy and run Kosmos control plane use script"}),"\n",(0,l.jsx)(n.p,{children:"run the following script:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/kosmos-io/kosmos.git && cd kosmos\nhack/local-up-kosmosctl.sh\n"})}),"\n",(0,l.jsx)(n.h2,{id:"deploy-and-run-kosmos-step-by-step",children:"Deploy and run Kosmos step by step"}),"\n",(0,l.jsx)(n.h3,{id:"1-use-kind-create-cluster",children:"1. Use Kind create cluster"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Config your kind cluster use flow config, change the param as you need"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'kind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnetworking:\n  # WARNING: It is _strongly_ recommended that you keep this the default\n  # (127.0.0.1) for security reasons. However it is possible to change this.\n  apiServerAddress: "192.168.200.112"\n  # By default the API server listens on a random open port.\n  # You may choose a specific port but probably don\'t need to in most cases.\n  # Using a random port makes it easier to spin up multiple clusters.\n  apiServerPort: 1443\nnodes:\n- role: control-plane\n  extraPortMappings:\n    - containerPort: "{{container_port}}"\n      hostPort: "{{host_port}}"\n      protocol: TCP\n      listenAddress: "{{host_ipaddress}}"\n#- role: worker\n#- role: worker\n'})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["create cluster1\n",(0,l.jsx)(n.code,{children:"kind create cluster -n kind-cluster1 --config /path/to/kind-config"})]}),"\n",(0,l.jsxs)(n.li,{children:["create cluster2\n",(0,l.jsx)(n.code,{children:"kind create cluster -n kind-cluster2 --config /path/to/kind-config"})]}),"\n",(0,l.jsxs)(n.li,{children:["create cluster3\n",(0,l.jsx)(n.code,{children:"kind create cluster -n kind-cluster3 --config /path/to/kind-config"})]}),"\n"]}),"\n",(0,l.jsxs)(n.h3,{id:"2-install-kosmosctl",children:["2. Install ",(0,l.jsx)(n.code,{children:"kosmosctl"})]}),"\n",(0,l.jsx)(n.p,{children:"Kosmos is equipped with a tool called kosmosctl, which allows for quick deployment of Kosmos components, adding clusters, and testing network connectivity."}),"\n",(0,l.jsx)(n.h4,{id:"21-use-prebuild-binary-executable-file",children:"2.1 Use prebuild Binary executable file"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Download from the ",(0,l.jsx)("a",{href:"https://github.com/kosmos-io/kosmos/releases",children:"releases page"}),", only support macOS and linux"]}),"\n",(0,l.jsxs)(n.li,{children:["put ",(0,l.jsx)(n.code,{children:"kosmosctl"})," to you Path, so you can execute ",(0,l.jsx)(n.code,{children:"kosmosctl"})," without absolute path"]}),"\n",(0,l.jsx)(n.li,{children:"recommend use linux to install kosmosctl"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"wget -cO kosmosctl-linux-amd64 https://github.com/kosmos-io/kosmos/releases/download/v0.2.0-lts/kosmosctl-linux-amd64\nchmod +x kosmosctl-linux-amd64 && sudo install -m 755 kosmosctl-linux-amd64 /usr/local/bin/kosmosctl\n"})}),"\n",(0,l.jsx)(n.h4,{id:"22-build-from-source",children:"2.2 Build from source"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Download source\n",(0,l.jsx)(n.code,{children:"git clone https://github.com/kosmos-io/kosmos.git"})]}),"\n",(0,l.jsxs)(n.li,{children:["Build code, the output file is in the",(0,l.jsx)(n.code,{children:" <project_dir>/_output/bin/linux/amd64/kosmosctl"}),"\n",(0,l.jsx)(n.code,{children:"make kosmosctl VERSION=v0.1.9"}),"]"]}),"\n",(0,l.jsxs)(n.li,{children:["you can find any available version or tags in ",(0,l.jsx)(n.a,{href:"https://github.com/kosmos-io/kosmos/tags",children:"here"})]}),"\n"]}),"\n",(0,l.jsxs)(n.h3,{id:"3-install-kosmos-control-plane-components",children:["3. Install ",(0,l.jsx)(n.code,{children:"kosmos"})," control plane components"]}),"\n",(0,l.jsxs)(n.p,{children:["The following command allows you to quickly run an experimental environment with three clusters.\nInstall the control plane in the host cluster.\nPlease config the pod can access the kind cluster apiServer, avoid the ",(0,l.jsx)(n.code,{children:"kosmos-operator"})," CrashLoopBackOff"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-Shell",children:"kosmosctl install  --cni calico --default-nic eth0 (We build a network tunnel based the network interface value passed by the arg default-nic)\n"})}),"\n",(0,l.jsxs)(n.h3,{id:"4-join-to-kosmos-control-plane",children:["4. Join to ",(0,l.jsx)(n.code,{children:"kosmos"})," control plane"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Get the cluster1 and cluster2 kubeconfig and put it on the host cluster"}),"\n",(0,l.jsx)(n.li,{children:"Join the two member clusters(execute on the host cluster)."}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-Shell",children:"kosmosctl join cluster --name cluster1 --kubeconfig ~/kubeconfig/cluster1-kubeconfig  --cni calico --default-nic eth0  --enable-all\nkosmosctl join cluster --name cluster2 --kubeconfig ~/kubeconfig/cluster2-kubeconfig  --cni calico --default-nic eth0  --enable-all\n"})}),"\n",(0,l.jsx)(n.h3,{id:"5-use-the-kosmos-clusters-like-single-cluster-on-the-control-plane",children:"5. Use the Kosmos clusters like single cluster on the control plane."}),"\n",(0,l.jsx)(n.p,{children:"check cluster nodes status"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"kubectl get nodes\nNAME                            STATUS   ROLES           AGE   VERSION\nkosmos-cluster1-control-plane   Ready    control-plane   9d    v1.27.3\nkosmos-cluster2                 Ready    agent           9d    v1.27.3\nkosmos-cluster3                 Ready    agent           9d    v1.27.3\n"})}),"\n",(0,l.jsx)(n.p,{children:"check cluster status"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"kubectl get clusters\nNAME                     NETWORK_TYPE   IP_FAMILY\ncluster2                 gateway        ipv4\ncluster3                 gateway        ipv4\nkosmos-control-cluster   gateway        ipv4\n"})}),"\n",(0,l.jsx)(n.h2,{id:"deploy-nginx-use-kosmos",children:"Deploy nginx use kosmos"}),"\n",(0,l.jsx)(n.h3,{id:"create-nginx-deployment-yaml",children:"create nginx deployment yaml"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      tolerations:\n        - key: kosmos.io/node\n          operator: Equal\n          value: "true"\n      containers:\n        - name: nginx\n          image: nginx:1.14.2\n          ports:\n            - containerPort: 80\n\n'})}),"\n",(0,l.jsx)(n.h3,{id:"apply-the-yaml",children:"apply the yaml"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f nginx-deploy.yml\n"})}),"\n",(0,l.jsx)(n.h3,{id:"check-nginx-pod-status",children:"check nginx pod status"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"kubectl get pods -o wide\nNAME                               READY   STATUS    RESTARTS   AGE   IP           NODE              NOMINATED NODE   READINESS GATES\nnginx-deployment-887b5c6bb-jx9kq   1/1     Running   0          18h   10.244.0.8   kosmos-cluster3   <none>           <none>\nnginx-deployment-887b5c6bb-kc9ff   1/1     Running   0          41h   10.244.0.7   kosmos-cluster2   <none>           <none>\nnginx-deployment-887b5c6bb-vz8vk   1/1     Running   0          41h   10.244.0.7   kosmos-cluster3   <none>           <none>\n"})}),"\n",(0,l.jsx)(n.p,{children:"we can see the pod deployed to leaf cluster and in running status"})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var l=s(6540);const o={},t=l.createContext(o);function i(e){const n=l.useContext(t);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),l.createElement(t.Provider,{value:n},e.children)}}}]);